#ifndef BENCHMANAGER_H
#define BENCHMANAGER_H
#include <vector>

#include "../SkipList.h"
#include "../Util.h"
#include "../Time.h"
#include "../Iterator.h"
#include "Thread.h"

#include <string>
#include <iostream>
#include <fstream>
#include <ostream>

#include <stdio.h>
#include <cstring>
#define MAXVALUE 100
using namespace std;


struct Req {
	string op;
	string key;

	Req(string op, string key) : key(k), op(op) {}
};

class Worker : public Thread {

	SkipList *sl;
	vector<Req> req;

	int do_query_with_trace(){}

	void *entry() override {
		do_query_with_trace();
	}

public:
	Worker(SkipList* sl) : sl(sl) {};
};


class BenchManager 
{
public:
	int th; 
	SkipList *sl;
	Worker *workers;
	
	int _read_trc_file(string fname); // load req to thread vector 

	int load_trc(string fname);
	int run_trc(string fname);  // get time by using Thread
	void get_stat();

	BenchManager(int th, SkipList *sl) : 
		th(th),
		sl(sl)
	{
		workers = new Worker[th](sl);

	} 
};

#endif
